// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Modul;

#nullable disable

namespace Modul.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ArtistSong", b =>
                {
                    b.Property<int>("ArtistsId")
                        .HasColumnType("int");

                    b.Property<int>("SongsId")
                        .HasColumnType("int");

                    b.HasKey("ArtistsId", "SongsId");

                    b.HasIndex("SongsId");

                    b.ToTable("ArtistSong");
                });

            modelBuilder.Entity("Modul.Models.Artist", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateOfDeath")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("InstagramUrl")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.HasKey("Id");

                    b.ToTable("Artists");

                    b.HasData(
                        new
                        {
                            Id = -1,
                            DateOfBirth = new DateTime(1997, 9, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InstagramUrl = "https://www.instagram.com/sanahmusic/",
                            Name = "Sanah"
                        },
                        new
                        {
                            Id = -2,
                            DateOfBirth = new DateTime(2001, 11, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Sobel"
                        },
                        new
                        {
                            Id = -3,
                            DateOfBirth = new DateTime(1993, 5, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InstagramUrl = "https://www.instagram.com/dylanwishop/",
                            Name = "Dawid Podsiadlo"
                        },
                        new
                        {
                            Id = -4,
                            DateOfBirth = new DateTime(1997, 4, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InstagramUrl = "https://www.instagram.com/ado.khayat/",
                            Name = "Khayat",
                            Phone = "380687618160"
                        },
                        new
                        {
                            Id = -5,
                            DateOfBirth = new DateTime(2004, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "sadsvitmusic@gmail.com",
                            InstagramUrl = "https://www.instagram.com/sadsvit/",
                            Name = "SadSvit"
                        });
                });

            modelBuilder.Entity("Modul.Models.Genre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            Id = -1,
                            Title = "Rock"
                        },
                        new
                        {
                            Id = -2,
                            Title = "Pop"
                        },
                        new
                        {
                            Id = -3,
                            Title = "Hip Hop"
                        },
                        new
                        {
                            Id = -4,
                            Title = "Jahz"
                        },
                        new
                        {
                            Id = -5,
                            Title = "Indie"
                        });
                });

            modelBuilder.Entity("Modul.Models.Song", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<TimeSpan>("Duration")
                        .HasColumnType("time");

                    b.Property<int?>("GenreId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<DateTime>("ReleasedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("GenreId");

                    b.ToTable("Songs");

                    b.HasData(
                        new
                        {
                            Id = -1,
                            Duration = new TimeSpan(0, 0, 3, 14, 0),
                            GenreId = -2,
                            ReleasedDate = new DateTime(2022, 10, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Mori"
                        },
                        new
                        {
                            Id = -2,
                            Duration = new TimeSpan(0, 0, 3, 9, 0),
                            GenreId = -5,
                            ReleasedDate = new DateTime(2022, 11, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "nic dwa razy"
                        },
                        new
                        {
                            Id = -3,
                            Duration = new TimeSpan(0, 0, 3, 20, 0),
                            GenreId = -2,
                            ReleasedDate = new DateTime(2020, 5, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "szampan"
                        },
                        new
                        {
                            Id = -4,
                            Duration = new TimeSpan(0, 0, 4, 0, 0),
                            GenreId = -2,
                            ReleasedDate = new DateTime(2021, 5, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Ultra"
                        },
                        new
                        {
                            Id = -5,
                            Duration = new TimeSpan(0, 0, 2, 25, 0),
                            GenreId = -1,
                            ReleasedDate = new DateTime(2021, 12, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Cassette"
                        });
                });

            modelBuilder.Entity("Modul.Models.SongArtist", b =>
                {
                    b.Property<int>("ArtistId")
                        .HasColumnType("int");

                    b.Property<int>("SongId")
                        .HasColumnType("int");

                    b.HasKey("ArtistId", "SongId");

                    b.HasIndex("SongId");

                    b.ToTable("SongsArtists");

                    b.HasData(
                        new
                        {
                            ArtistId = -1,
                            SongId = -2
                        },
                        new
                        {
                            ArtistId = -1,
                            SongId = -3
                        },
                        new
                        {
                            ArtistId = -3,
                            SongId = -1
                        },
                        new
                        {
                            ArtistId = -4,
                            SongId = -4
                        },
                        new
                        {
                            ArtistId = -5,
                            SongId = -5
                        });
                });

            modelBuilder.Entity("ArtistSong", b =>
                {
                    b.HasOne("Modul.Models.Artist", null)
                        .WithMany()
                        .HasForeignKey("ArtistsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Modul.Models.Song", null)
                        .WithMany()
                        .HasForeignKey("SongsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Modul.Models.Song", b =>
                {
                    b.HasOne("Modul.Models.Genre", "Genre")
                        .WithMany("Songs")
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Genre");
                });

            modelBuilder.Entity("Modul.Models.SongArtist", b =>
                {
                    b.HasOne("Modul.Models.Artist", "Artist")
                        .WithMany("SongArtists")
                        .HasForeignKey("ArtistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Modul.Models.Song", "Song")
                        .WithMany("SongArtists")
                        .HasForeignKey("SongId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Artist");

                    b.Navigation("Song");
                });

            modelBuilder.Entity("Modul.Models.Artist", b =>
                {
                    b.Navigation("SongArtists");
                });

            modelBuilder.Entity("Modul.Models.Genre", b =>
                {
                    b.Navigation("Songs");
                });

            modelBuilder.Entity("Modul.Models.Song", b =>
                {
                    b.Navigation("SongArtists");
                });
#pragma warning restore 612, 618
        }
    }
}
